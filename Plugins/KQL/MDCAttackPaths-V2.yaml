#This KQL plugin is based on Thomas Naunheim's MDC Attack Path query and modified further on together with Joosua Santasalo
Descriptor:
  Name: MDCAttackPaths
  DisplayName: Get Microsoft Defender for Cloud Attack Paths
  Description: >
    This plugin allows you to get Microsoft Defender for Cloud Attack Paths. It is a KQL plugin that can be used to query the Microsoft Defender for Cloud data.

SkillGroups:
  - Format: KQL
    Skills:
      - Name: MDCAttackPaths
        DisplayName: MDC Attack Paths
        Description: >
          Search for Attack Paths in Microsoft Defender for Cloud. The attack paths are correlated to security alerts. Only high severity and Azure resources are listed at this version.
        ExamplePrompt:
          - "Get Microsoft Defender for Cloud Attack Paths"
          - "Get Microsoft Defender for Cloud Attack Paths where the alert severity is high"
        Settings:
          Target: Defender
          Template: |-
            arg("").securityresources
              | where type == "microsoft.security/attackpaths"
              | extend AttackPathDisplayName = tostring(properties["displayName"])
              | mvexpand (properties.graphComponent.entities)
              | extend Entity = parse_json(properties_graphComponent_entities)
              | extend ResourceId = tostring(tolower(Entity.entityIdentifiers.azureResourceId))
              | where isnotempty(ResourceId)
              | extend tostring(AttackStory = parse_json(properties.attackStory))
              | extend tostring(AttackDescription = parse_json(properties.description))
              | extend plainName =tostring(Entity.entityName)
              | project AttackPathDisplayName, AttackStory, AttackDescription, ResourceId, plainName
              | summarize attackPaths = make_set(bag_pack('description',AttackDescription, 'path', AttackPathDisplayName, 'story', AttackStory)) by  ResourceId
              | join hint.remote=right (SecurityAlert
              | extend EntitiesDynamicArray = parse_json(Entities) | mv-expand EntitiesDynamicArray
                  | extend host = tostring(parse_json(EntitiesDynamicArray).HostName), aadID = tostring(parse_json(EntitiesDynamicArray).AadDeviceId) | where isnotempty( aadID)
                  | join kind=inner     (DeviceInfo | project  AzureResourceId, AadDeviceId ) on $left.aadID == $right.AadDeviceId
                  | distinct AlertName, AlertSeverity, ResourceId=tolower(AzureResourceId), AlertDescription = Description, host
              ) on ResourceId
              | project-away ResourceId*
              | extend tostring(attackPaths)
              | distinct *